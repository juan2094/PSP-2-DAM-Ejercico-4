/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.practica4;

import java.io.FileNotFoundException;
import java.io.IOException;
import static java.lang.Math.E;
import java.util.ArrayList;
import java.util.Collections;
import java.util.GregorianCalendar;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Cala
 */
public class Vista  extends javax.swing.JFrame  {
   private static MyList lista = new MyList();
    MyList listaAux = new MyList();
   
    
    //Creo la lista de manera global para poder llamarla en cualquier método
    
    
    /**
     * Creates new form Vista
     * @throws com.mycompany.practica4.ESaldoNoValido
     */
    public Vista(MyList lista) throws ESaldoNoValido {
        initComponents();
        this.lista=lista;
        //cargo los primeros empleados de serie
        btnRetroceder.setEnabled(false);
        btnOk.setVisible(false);
        btnNoOk.setVisible(false);
        //Fecha fechaActual=new Fecha();
        
        //GregorianCalendar g = new GregorianCalendar();
        
        lista.add(new Analista(1996,"David",1300.00,2000.00,new Fecha(02,11,2023),"1",1000.00),1996);
        lista.add(new Programador(1314,"Pablete",1500,2000,new Fecha(10,10,1994),200,2),1314);
        lista.add(new Programador(1260,"Juan",1300,2000,new Fecha(9,10,1994),200,8),1260);
        lista.add(new Programador(1341,"Antonio",1200,2000,new Fecha(8,11,1994),200,8),1341);
        lista.add(new Analista(1574,"Davilito",1300.00,2000.00,new Fecha(02,11,2023),"1",1000.00),1574);
        lista.add(new Programador(1347,"Pablito",1700,2000,new Fecha(10,10,1994),200,2),1347);
        lista.add(new Programador(1792,"e1",1500,2000,new Fecha(10,10,1994),200,8),1792);
        lista.add(new Programador(1777,"Andres",1200,2000,new Fecha(8,11,1994),200,8),1777);
        
        Empleado aux = (Empleado) lista.getLastNode().main;
       
        mostrarDatos(aux);
        comprobarFecha();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnCargar = new javax.swing.JButton();
        btnPrimero = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnAvanzar = new javax.swing.JButton();
        btnRetroceder = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();
        btnOrdenar = new javax.swing.JButton();
        btnMasivo = new javax.swing.JButton();
        btnCalcular = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtEmpleo = new javax.swing.JTextField();
        txtSueldo = new javax.swing.JTextField();
        txtFechaDia = new javax.swing.JTextField();
        txtSueldoMax = new javax.swing.JTextField();
        txtFechaMes = new javax.swing.JTextField();
        txtFechaAño = new javax.swing.JTextField();
        jLabelCampo = new javax.swing.JLabel();
        txtCampo = new javax.swing.JTextField();
        jLabelPlus = new javax.swing.JLabel();
        txtPlus = new javax.swing.JTextField();
        btnOk = new javax.swing.JButton();
        btnNoOk = new javax.swing.JButton();
        btnVerLista = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 290, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 383, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCargar.setText("Cargar");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        btnPrimero.setText("Primero");
        btnPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeroActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnAvanzar.setText("Siguiente");
        btnAvanzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvanzarActionPerformed(evt);
            }
        });

        btnRetroceder.setText("Anterior");
        btnRetroceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrocederActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnUltimo.setText("Ultimo");
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        btnMasivo.setText("Creado Masivo");
        btnMasivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMasivoActionPerformed(evt);
            }
        });

        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre");

        jLabel2.setText("Empleo: ");

        jLabel3.setText("Sueldo");

        jLabel5.setText("Fecha: ");

        jLabel6.setText("Sueldo Maximo");

        jLabel7.setText("Numero: ");

        txtFechaDia.setToolTipText("");

        txtSueldoMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSueldoMaxActionPerformed(evt);
            }
        });

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnNoOk.setText("No ok");

        btnVerLista.setText("Ver Lista");
        btnVerLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerListaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNumero, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                    .addComponent(txtNombre)
                                    .addComponent(txtEmpleo)
                                    .addComponent(txtSueldo)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(txtFechaDia, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPlus)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtCampo)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtFechaMes, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtFechaAño, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(txtSueldoMax)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnRetroceder, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAvanzar))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnPrimero)
                                    .addComponent(btnUltimo)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnNoOk)
                                        .addComponent(btnOk))))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnCargar)
                            .addGap(84, 84, 84)
                            .addComponent(btnNuevo))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnGuardar)
                            .addGap(84, 84, 84)
                            .addComponent(btnOrdenar))))
                .addContainerGap(80, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnMasivo)
                        .addGap(88, 88, 88))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnVerLista)
                        .addGap(109, 109, 109))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(50, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtEmpleo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtFechaDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFechaMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFechaAño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtSueldoMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPlus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAvanzar)
                            .addComponent(btnPrimero))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRetroceder)
                            .addComponent(btnUltimo))
                        .addGap(47, 47, 47)
                        .addComponent(btnCalcular)
                        .addGap(18, 18, 18)
                        .addComponent(btnOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNoOk)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCargar)
                    .addComponent(btnNuevo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnMasivo)
                .addGap(18, 18, 18)
                .addComponent(btnVerLista)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnOrdenar))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
       
            
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.showOpenDialog(fileChooser);
            try {
            String ruta = fileChooser.getSelectedFile().getAbsolutePath();
            
            lista = new MyList();
            
            ArrayList<Empleado> arrayEmple = lista.loadData(ruta);
            // System.out.println("LA RUTA ES ==========="+ruta);
            for(Empleado e:arrayEmple){
            lista.add(e, e.getNumero());
            }
            
            
            } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
            } catch (NullPointerException e) {
            System.out.println("No se ha seleccionado ningún fichero");
            } catch (Exception e) {
            System.out.println(e.getMessage());
            } 
            
             Empleado aux = (Empleado) lista.getLastNode().main;
       
             mostrarDatos(aux);
        /*
            try {
            VisualizarLista l = new VisualizarLista(lista);
            l.setVisible(true);
            this.setVisible(false);
            
        } catch (ESaldoNoValido ex) {
            Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
        */
        
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeroActionPerformed
        lista.goFirstNode();
        Empleado aux = (Empleado)lista.getActualNode().main;
        mostrarDatos(aux);
        btnRetroceder.setEnabled(false);
        if(lista.isFirst()){
                btnPrimero.setEnabled(false);
                btnUltimo.setEnabled(true);
            }
            if(lista.isLast()){
                btnPrimero.setEnabled(true);
                btnUltimo.setEnabled(false);
            }
    }//GEN-LAST:event_btnPrimeroActionPerformed

    private void btnAvanzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvanzarActionPerformed
        avanzar();
        comprobarFecha();
    }//GEN-LAST:event_btnAvanzarActionPerformed

    private void btnRetrocederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrocederActionPerformed
       retroceder();
       comprobarFecha();
    }//GEN-LAST:event_btnRetrocederActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
       lista.goLastNode();
        Empleado aux = (Empleado)lista.getActualNode().main;
        mostrarDatos(aux);
        btnPrimero.setEnabled(false);
        btnAvanzar.setEnabled(false);
        if(lista.isFirst()){
                btnPrimero.setEnabled(false);
                btnUltimo.setEnabled(true);
            }
            if(lista.isLast()){
                btnPrimero.setEnabled(true);
                btnUltimo.setEnabled(false);
            }
    }//GEN-LAST:event_btnUltimoActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        
            txtNumero.setEditable(true);
            txtNombre.setEditable(true);
            txtSueldo.setEditable(true);
            txtSueldoMax.setEditable(true);        
            txtFechaDia.setEditable(true);        
            txtFechaMes.setEditable(true);        
            txtFechaAño.setEditable(true);        
            txtEmpleo.setEditable(true);
       // btnOk.setEnabled(true);
       // btnNook.setEnabled(true);
        btnAvanzar.setEnabled(false);
        btnCalcular.setEnabled(false);
        btnCargar.setEnabled(false);
        btnGuardar.setEnabled(false);
        btnMasivo.setEnabled(false);
        btnNuevo.setEnabled(false);
        btnOrdenar.setEnabled(false);
        btnPrimero.setEnabled(false);
        btnUltimo.setEnabled(false);
        btnRetroceder.setEnabled(false);
        btnOk.setVisible(true);
        btnNoOk.setVisible(true);
        
        limpiarCampos();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txtSueldoMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSueldoMaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSueldoMaxActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(fileChooser);
       
        try {
            String ruta = fileChooser.getSelectedFile().getAbsolutePath();
            lista.saveData(ruta);
        } catch (IOException ex) {
            Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException e) {
            System.out.println("No se ha seleccionado ningún fichero");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } 
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
       
        //COMPROBAMOS QUE NADA ESTÉ EN BLANCO
        if(txtNombre.getText().isBlank() || txtSueldoMax.getText().isBlank() || txtEmpleo.getText().isBlank()|| txtNumero.getText().isBlank() || txtFechaDia.getText().isBlank() || txtFechaMes.getText().isBlank()|| txtFechaAño.getText().isBlank() || txtSueldo.getText().isBlank() || txtCampo.getText().isBlank() || txtPlus.getText().isBlank()){
            JOptionPane.showMessageDialog(this,"Todos los campos deben estar rellenos");
        }
        else{
            String nombre = txtNombre.getText();
            int numero = Integer.parseInt(txtNumero.getText());
            int fechaDia = Integer.parseInt(txtFechaDia.getText());
            int fechaMes = Integer.parseInt(txtFechaMes.getText());
            int fechaAño = Integer.parseInt(txtFechaAño.getText());
            double sueldo = Integer.parseInt(txtSueldo.getText());
            double sueldoMax = Integer.parseInt(txtSueldoMax.getText());
            String puesto = txtEmpleo.getText();
            
            double plus = Integer.parseInt(txtPlus.getText());
            //TERMINAR ESTO
        if(fechaDia<30 || fechaDia>1 || fechaMes>1 || fechaMes<12 || fechaAño>1900 || fechaAño<2023 ){
            //COMPROBACIONES DE FECHA
            
        
        try {
            //comprobar que puesto es
            if(puesto.equalsIgnoreCase("analista") || puesto.equalsIgnoreCase("programador") ){
            
            if(puesto.equals("Analista") ||puesto.equalsIgnoreCase("analista")){
                String sindicato = txtCampo.getText();
                Analista nuevoEmpleado = new Analista(numero,nombre,sueldo,sueldoMax,new Fecha(fechaDia,fechaMes,fechaAño),sindicato,plus);
                lista.add(nuevoEmpleado,numero);
            }
  
            if(puesto.equalsIgnoreCase("programador") || "Programador".equalsIgnoreCase(puesto)){
                int programas = Integer.parseInt(txtCampo.getText());
                Programador nuevoEmpleado = new Programador(numero,nombre,sueldo,sueldoMax,new Fecha(fechaDia,fechaMes,fechaAño),programas, (int) plus);
                lista.add(nuevoEmpleado,numero);
            }
            }else{
                JOptionPane.showMessageDialog(this, "Solo puedes poner programador o analista");
            }
           
    
        } catch (ESaldoNoValido ex) {
            
            //enseño un mensaje de error y muesto un empleado
            
            JOptionPane.showMessageDialog(this, "El saldo debe ser mayor que el sueldo maximo");
            limpiarCampos();
            Empleado aux = (Empleado) lista.getActualNode().getMain();
            mostrarDatos(aux);
        }
          }
        else{
            JOptionPane.showMessageDialog(this, "Fecha no valida");
        }}

        btnAvanzar.setEnabled(true);
        btnCalcular.setEnabled(true);
        btnCargar.setEnabled(true);
        btnGuardar.setEnabled(true);
        btnMasivo.setEnabled(true);
        btnNuevo.setEnabled(true);
        btnOrdenar.setEnabled(true);
        btnPrimero.setEnabled(true);
        btnUltimo.setEnabled(true);
        btnRetroceder.setEnabled(true);
        btnOk.setVisible(false);
        btnNoOk.setVisible(false);
        Empleado aux = (Empleado) lista.getActualNode().getMain();
        mostrarDatos(aux);
        comprobarFecha();
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
            
        
        if(txtEmpleo.getText().equalsIgnoreCase("Analista")){
            
            Analista aux2 = (Analista) lista.getActualNode().getMain();
            
            if(aux2.cumpleAños()){
                try {
                    aux2.setSueldo(aux2.getSueldo()+aux2.getPlusAnual());
                    mostrarDatos(aux2);
                } catch (ESaldoNoValido ex) {
                    JOptionPane.showMessageDialog(this,"El saldo no debe superar el saldo maximo");
                }
            }
        }
        if(txtEmpleo.getText().equalsIgnoreCase("Programador")){
            
            Programador aux2 = (Programador) lista.getActualNode().getMain();
            
            if(aux2.cumpleMes()){
                try {
                    aux2.setSueldo(aux2.getSueldo()+aux2.getExtraMensual());
                    mostrarDatos(aux2);
                } catch (ESaldoNoValido ex) {
                    JOptionPane.showMessageDialog(this,"El saldo no debe superar el saldo maximo");
                }
            }
        }

        
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        long primero = System.currentTimeMillis();
        
        ArrayList array = crearArray();
        
        lista.Sort();
        //lista.sortAndres();
        long segundo = System.currentTimeMillis();
        
        String mensaje="HAn pasado "+(segundo-primero)+" miliSegundos";
        JOptionPane.showMessageDialog(this,mensaje );
        
        
        
       primero = System.currentTimeMillis();
        Collections.sort(array);
       segundo = System.currentTimeMillis();
       mensaje="HAn pasado "+(segundo-primero)+" milisegundos";
        JOptionPane.showMessageDialog(this,mensaje );
       lista.goFirstNode();
        Empleado aux = (Empleado) lista.getActualNode().getMain() ;
        mostrarDatos(aux);
        comprobarFecha();
        
    }//GEN-LAST:event_btnOrdenarActionPerformed

    private void btnMasivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMasivoActionPerformed
        
        Random numAleatorio = new Random();
        
        for(int i=0; i<100000;i++){
        int numero = numAleatorio.nextInt(2001,1000000);
        
        Analista masivo = null;
        try {
            masivo = new Analista (numero,"",0.0,0.0,(new Fecha(1,1,1990)),"",0.0);
        } catch (ESaldoNoValido ex) {
            Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
        lista.add(masivo,numero);
        }
        Empleado aux = (Empleado) lista.getLastNode().main;
       
        
             mostrarDatos(aux);
             
        for(int i=0;i<100;i++){
           aux= (Empleado)lista.getActualNode().getMain();
            System.out.println(aux.toString());
            lista.nextNode();
        }
        
        lista.goFirstNode();
        mostrarDatos(aux);
        comprobarFecha();
             
    }//GEN-LAST:event_btnMasivoActionPerformed

    private void btnVerListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerListaActionPerformed
        
        VisualizarLista v = new VisualizarLista(lista);
        this.setVisible(false);
        v.setVisible(true);
        
    }//GEN-LAST:event_btnVerListaActionPerformed
    /**
     * @param args the command line arguments
     * @throws com.mycompany.practica4.ESaldoNoValido
     */
    
    
   
    public static void main(String args[]) throws ESaldoNoValido {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
  
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Vista(lista).setVisible(true);
            } catch (ESaldoNoValido ex) {
                Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvanzar;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnMasivo;
    private javax.swing.JButton btnNoOk;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JButton btnPrimero;
    private javax.swing.JButton btnRetroceder;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JButton btnVerLista;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelCampo;
    private javax.swing.JLabel jLabelPlus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtCampo;
    private javax.swing.JTextField txtEmpleo;
    private javax.swing.JTextField txtFechaAño;
    private javax.swing.JTextField txtFechaDia;
    private javax.swing.JTextField txtFechaMes;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtPlus;
    private javax.swing.JTextField txtSueldo;
    private javax.swing.JTextField txtSueldoMax;
    // End of variables declaration//GEN-END:variables

 
    public void avanzar(){

          lista.nextNode();
       Empleado aux = (Empleado) lista.getActualNode().getMain();
       
       mostrarDatos(aux);
       
       // lista nodoActual = lista.getFirstNode();
       
       btnRetroceder.setEnabled(true);
       if(lista.isFirst()){
            btnAvanzar.setEnabled(false);
        }
        if(lista.isFirst()){
                btnPrimero.setEnabled(false);
                btnUltimo.setEnabled(true);
            }
            if(lista.isLast()){
                btnPrimero.setEnabled(true);
                btnUltimo.setEnabled(false);
            }
       
       if(!lista.isFirst()&&!lista.isLast()){
                btnPrimero.setEnabled(true);
                btnUltimo.setEnabled(true);
            }
                
    }
    
    public void retroceder(){
        
         lista.previousNode();
        
         Empleado aux = (Empleado) lista.getActualNode().getMain();
        
         mostrarDatos(aux);
         btnAvanzar.setEnabled(true);
            if(lista.isLast()){
                btnRetroceder.setEnabled(false);
        }
             if(lista.isFirst()){
                btnPrimero.setEnabled(false);
                btnUltimo.setEnabled(true);
            }
            if(lista.isLast()){
                btnPrimero.setEnabled(true);
                btnUltimo.setEnabled(false);
            }
    }

    private void mostrarDatos(Empleado aux) {
 
            txtNumero.setText(""+aux.getNumero());
            txtNombre.setText(""+aux.getNombre());
            txtSueldo.setText(""+aux.getSueldo());
            txtSueldoMax.setText(""+aux.getSueldoMaximo());
            txtFechaDia.setText(""+aux.getFecha().getDia());
            txtFechaMes.setText(""+aux.getFecha().getMes());
            txtFechaAño.setText(""+aux.getFecha().getAño());
            txtEmpleo.setText(""+aux.getClass().getSimpleName());
            
            txtNumero.setEditable(false);
            txtNombre.setEditable(false);
            txtSueldo.setEditable(false);
            txtSueldoMax.setEditable(false);        
            txtFechaDia.setEditable(false);        
            txtFechaMes.setEditable(false);        
            txtFechaAño.setEditable(false);        
            txtEmpleo.setEditable(false);
                    
            if("Analista".equals(aux.getClass().getSimpleName())){
                Analista analista= (Analista) aux;
            jLabelCampo.setText("Sindicato: ");
            jLabelPlus.setText("Plus anual: ");
            txtCampo.setText(""+analista.getSindicato());
            txtPlus.setText(""+analista.getPlusAnual());
            }
            else{
                Programador pro = (Programador) aux;
                jLabelCampo.setText("ProgramasEscritos: ");
                jLabelPlus.setText("Plus Mensual: ");
                txtCampo.setText(""+pro.getProgramasEscritos());
                txtPlus.setText(""+pro.getExtraMensual());
            }
            //terminar de añadir cosas
    
    }
    
    private void limpiarCampos() {
            txtNumero.setText("");
            txtNombre.setText("");
            txtSueldo.setText("");
            txtSueldoMax.setText("");
            txtFechaDia.setText("");
            txtFechaMes.setText("");
            txtFechaAño.setText("");
            txtEmpleo.setText("");
             jLabelCampo.setText("Tipo dato 1: ");
            jLabelPlus.setText("Tipo dato 2: ");
            txtCampo.setText("");
            txtPlus.setText("");

    }
    
    private ArrayList crearArray(){
        
        ArrayList array = new ArrayList();
        
        lista.goLastNode();
        
       
        
        do{
        Empleado aux = (Empleado) lista.getActualNode().getMain();
       
        array.add(aux);
        
        lista.previousNode();
        }while(lista.getActualNode()!=null);
        return array;
    }
    
    private void comprobarFecha(){
        boolean bandera=false;
        
           if("Analista".equalsIgnoreCase(txtEmpleo.getText())){
            
            Analista aux2 = (Analista) lista.getActualNode().getMain();
            
            if(aux2.cumpleAños()){
                btnCalcular.setEnabled(true);
            }else{
                btnCalcular.setEnabled(false);
            }
        }
        if("Programador".equalsIgnoreCase(txtEmpleo.getText())){
            try{
            Programador aux2 = (Programador) lista.getActualNode().getMain();
            
            if(aux2.cumpleAños()){
                btnCalcular.setEnabled(true);
            }else{
                btnCalcular.setEnabled(false);
            }
            }catch(Exception e){
                System.out.println("error extraño");
            }
        }
        
        
    }
    
    
}








